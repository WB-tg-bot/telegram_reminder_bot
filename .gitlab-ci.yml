stages:
  - build
  - test
  - docker_build
  - deploy

variables:
  APP_NAME: "telegram_reminder_bot"
  BUILD_VERSION: "1.0.${CI_PIPELINE_IID}"
  DOCKER_REGISTRY: "docker.io"  # Изменено!
  BUILD_DIR: "storage"
  GOPATH: "${CI_PROJECT_DIR}/.go"

cache:
  paths:
    - .go/pkg/mod/
    - storage/go.mod
    - storage/go.sum
    - storage/bin/

# Build stage
build_app:
  stage: build
  image: golang:1.21
  script:
    - cd ${BUILD_DIR}
    - go mod download
    - go build -o bin/${APP_NAME} ./cmd/main.go
  artifacts:
    paths:
      - ${BUILD_DIR}/bin/
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - docker  # Убедитесь что есть раннер с этим тегом

# Test stage
test_unit:
  stage: test
  image: golang:1.21
  script:
    - cd ${BUILD_DIR}
    - go test -v ./handler/... -coverprofile=coverage.out
    - go tool cover -func=coverage.out
  artifacts:
    reports:
      junit: ${BUILD_DIR}/junit.xml
    paths:
      - ${BUILD_DIR}/coverage.out
    expire_in: 1 week
  dependencies:
    - build_app

# Docker build stage
build_docker_image:
  stage: docker_build
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_IMAGE: "ktutic/${APP_NAME}:${BUILD_VERSION}"  # Изменено!
  script:
    - echo "Building ${DOCKER_IMAGE}"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t ${DOCKER_IMAGE} .
    - docker push ${DOCKER_IMAGE}
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - docker

# Deploy stage
deploy_app:
  stage: deploy
  image: alpine:3.18
#  before_script:
#    - mkdir -p ~/.ssh
#    - echo "$DEPLOY_SSH_KEY" > ~/.ssh/id_rsa
#    - chmod 600 ~/.ssh/id_rsa
  script:
    - apk add --no-cache openssh-client docker-cli
    - ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} \
      "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD && \
      docker pull ${DOCKER_IMAGE} && \
      docker-compose -f ${DEPLOY_COMPOSE_FILE} up -d"
  when: manual
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
  tags:
    - docker